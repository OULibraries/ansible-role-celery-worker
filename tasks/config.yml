---

- name: Add workerq user
  user:
    name: "{{ celery_workerq_user }}"
    state: present

- name: Ensure installation directories
  file:
    path: "{{ item }}"
    owner: "{{ celery_workerq_user }}"
    group: "{{ celery_workerq_user }}"
    mode: 0770
    state: directory
    recurse: yes
  with_items:
    - "{{ celery_workerq_dir }}/ssl/client"
    - "{{ celery_workerq_dir }}/ssl/testca"

- name: Copy pubkeys
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ celery_workerq_user }}"
    group: "{{ celery_workerq_user }}"
    mode: 0644
  with_items:
    - src: cert.pem
      dest: "{{ celery_workerq_dir }}/ssl/client/cert.pem"
    - src: cacert.pem
      dest: "{{ celery_workerq_dir }}/ssl/testca/cacert.pem"

- name: Copy deployment keys
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
    owner: "{{ celery_workerq_user }}"
    group: "{{ celery_workerq_user }}"
    mode: 0600
  no_log: true
  with_items:
    - content: "{{ celery_workerq_rabbit_key_content }}"
      dest: "{{ celery_workerq_dir }}/ssl/client/key.pem"
    - content: "{{ celery_workerq_mongo_key_content }}"
      dest: "{{ celery_workerq_dir }}/ssl/client/mongodb.pem"

- name: Template celery workerq configuration
  template:
    src: celeryconfig.py.j2
    dest: "{{ celery_workerq_dir }}/celeryconfig.py"
    owner: "{{ celery_workerq_user }}"
    group: "{{ celery_workerq_user }}"
    mode: 0600

- name: Install oulib-celery-workerq service
  template:
    src: oulib-celery-workerq.service.j2
    dest: /lib/systemd/system/oulib-celery-workerq.service
    mode: 0644
    owner: root
    group: root
  notify:
    - reload systemd
    - restart oulib-celery-workerq.service
